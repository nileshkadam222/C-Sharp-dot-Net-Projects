<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jiACIMQWLFE6iWOMKWSAUWLFmIwXAsWLETH/2Q==
</value>
  </data>
</root>